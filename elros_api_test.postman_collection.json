{
	"info": {
		"_postman_id": "f4c9189d-fb19-4ef8-aa9e-66af8aabf058",
		"name": "elros_api_test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39794195"
	},
	"item": [
		{
			"name": "POST",
			"item": [
				{
					"name": "addCountry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "France",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/country/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"country",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "addManufacturer",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "FORD",
									"type": "text"
								},
								{
									"key": "country",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/manufacturer/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"manufacturer",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "addCar",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "FOCUS",
									"type": "text"
								},
								{
									"key": "manufacturer",
									"value": "2",
									"type": "text"
								},
								{
									"key": "date_created",
									"value": "2024-11-11",
									"type": "text"
								},
								{
									"key": "date_finished",
									"value": "2024-11-12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/cars/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"cars",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "addComment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 400\", function () {",
									"    pm.expect(pm.response.code).to.equal(400);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required Content-Type header set to application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Car field is present in the response\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.have.property('car');",
									"});",
									"",
									"",
									"pm.test(\"Car field should not be an empty array\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('object');",
									"  pm.expect(responseData.car).to.be.an('array').and.to.have.lengthOf.at.least(1, \"Car field should not be an empty array\");",
									"});",
									"",
									"",
									"pm.test(\"Response contains the expected keys and values\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('car');",
									"    pm.expect(responseData.car).to.be.an('array');",
									"    pm.expect(responseData.car).to.have.lengthOf(1);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "root@mail.ru",
									"type": "text"
								},
								{
									"key": "car",
									"value": "2",
									"type": "text"
								},
								{
									"key": "comment",
									"value": "Cool ",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/comment/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"comment",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GET",
			"item": [
				{
					"name": "getCountries",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, name, manufacturers\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(country) {",
									"        pm.expect(country).to.have.property('id');",
									"        pm.expect(country).to.have.property('name');",
									"        pm.expect(country).to.have.property('manufacturers');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Validate the manufacturers array\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(item) {",
									"        pm.expect(item).to.have.property('id').that.is.a('number');",
									"        pm.expect(item).to.have.property('name').that.is.a('string');",
									"        pm.expect(item).to.have.property('country').that.is.a('number');",
									"        pm.expect(item).to.have.property('country_name').that.is.a('string');",
									"        pm.expect(item).to.have.property('cars').that.is.an('array');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Name and country_name should be non-empty strings\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  responseData.forEach(function(item) {",
									"    pm.expect(item).to.be.an('object');",
									"    pm.expect(item.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"    pm.expect(item.country_name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Country name should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Cars array is present and contains expected number of elements\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(country) {",
									"        pm.expect(country.manufacturers).to.be.an('array');",
									"        country.manufacturers.forEach(function(manufacturer) {",
									"            pm.expect(manufacturer.cars).to.be.an('array');",
									"            pm.expect(manufacturer.cars).to.have.lengthOf(0); // Replace 0 with the expected number of elements",
									"        });",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/country/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"country",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getCountry",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/country/3",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"country",
								"3"
							]
						}
					},
					"response": []
				},
				{
					"name": "getManufacturer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"    ",
									"    responseData.forEach(function (manufacturer) {",
									"        pm.expect(manufacturer).to.have.property('id');",
									"        pm.expect(manufacturer).to.have.property('name');",
									"        pm.expect(manufacturer).to.have.property('country');",
									"        pm.expect(manufacturer).to.have.property('country_name');",
									"        pm.expect(manufacturer).to.have.property('cars');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Name is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  responseData.forEach(function(manufacturer) {",
									"    pm.expect(manufacturer.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Country is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(manufacturer) {",
									"        pm.expect(manufacturer.country).to.be.a('number');",
									"        pm.expect(manufacturer.country).to.be.at.least(0);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Cars array is present and contains expected number of elements\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(manufacturer) {",
									"        pm.expect(manufacturer.cars).to.exist.and.to.be.an('array');",
									"        // Add additional checks here for expected number of elements in the cars array",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/manufacturer/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"manufacturer",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getManufacturers",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.code).to.equal(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, name, country, country_name, and cars\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array').that.is.not.empty;",
									"    ",
									"    responseData.forEach(function(item) {",
									"        pm.expect(item).to.have.property('id');",
									"        pm.expect(item).to.have.property('name');",
									"        pm.expect(item).to.have.property('country');",
									"        pm.expect(item).to.have.property('country_name');",
									"        pm.expect(item).to.have.property('cars');",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Name is a non-empty string\", function () {",
									"  const responseData = pm.response.json();",
									"  ",
									"  pm.expect(responseData).to.be.an('array');",
									"  responseData.forEach(function(manufacturer) {",
									"    pm.expect(manufacturer.name).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Name should not be empty\");",
									"  });",
									"});",
									"",
									"",
									"pm.test(\"Country is a non-negative integer\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(manufacturer){",
									"        pm.expect(manufacturer.country).to.be.a('number').and.to.satisfy((value) => value >= 0);",
									"    });",
									"});",
									"",
									"",
									"pm.test(\"Cars array is present and contains expected number of elements\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"    responseData.forEach(function(manufacturer) {",
									"        pm.expect(manufacturer.cars).to.exist.and.to.be.an('array');",
									"        // Add additional checks for expected number of elements in the cars array if needed",
									"    });",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/manufacturer/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"manufacturer",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getCar",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/cars/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"cars",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getCars",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response has the correct Content-Type header\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"    const responseData = pm.response.json();",
									"    pm.expect(responseData).to.be.an('array');",
									"});",
									"",
									"",
									"pm.test(\"Response body array should be empty\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array').that.is.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response time is within an acceptable range\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(500);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/cars/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"cars",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getComment",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/comment/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"comment",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "getComments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 200\", function () {",
									"    pm.expect(pm.response.to.have.status(200));",
									"});",
									"",
									"",
									"pm.test(\"Response has the required Content-Type header set to application/json\", function () {",
									"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.include(\"application/json\");",
									"});",
									"",
									"",
									"pm.test(\"Response body is an array\", function () {",
									"    const responseData = pm.response.json();",
									"    ",
									"    pm.expect(responseData).to.be.an('array');",
									"});",
									"",
									"",
									"pm.test(\"Response body is empty\", function () {",
									"    pm.expect(pm.response.json()).to.be.an('array').that.is.empty;",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"  pm.expect(pm.response.responseTime).to.be.below(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/comment/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"comment",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "putCountry",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "AMERICA",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/country/3/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"country",
								"3",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "putManufacturer",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "FORD",
									"type": "text"
								},
								{
									"key": "country",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/manufacturer/2/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"manufacturer",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "putCar",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "FOCUS",
									"type": "text"
								},
								{
									"key": "manufacturer",
									"value": "2",
									"type": "text"
								},
								{
									"key": "date_created",
									"value": "2024-11-11",
									"type": "text"
								},
								{
									"key": "date_finished",
									"value": "2024-11-12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/cars/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"cars",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "putComment",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "root@mail.ru",
									"type": "text"
								},
								{
									"key": "car",
									"value": "2",
									"type": "text"
								},
								{
									"key": "comment",
									"value": "Cool car!!!!!!!!!!!!!!!!",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/comment/2/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"comment",
								"2",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "delComment",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "email",
									"value": "root@mail.ru",
									"type": "text"
								},
								{
									"key": "car",
									"value": "2",
									"type": "text"
								},
								{
									"key": "comment",
									"value": "Cool car!!!!!!!!!!!!!!!!",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/comment/2/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"comment",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delCar",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "FOCUS",
									"type": "text"
								},
								{
									"key": "manufacturer",
									"value": "2",
									"type": "text"
								},
								{
									"key": "date_created",
									"value": "2024-11-11",
									"type": "text"
								},
								{
									"key": "date_finished",
									"value": "2024-11-12",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/cars/1/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"cars",
								"1",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delManufacturer",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "FORD",
									"type": "text"
								},
								{
									"key": "country",
									"value": "3",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/manufacturer/2/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"manufacturer",
								"2",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "delCountry",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Token a1cec65a3509bbbbef7b1e52ab007636f6f5a61b",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "name",
									"value": "AMERICA",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "http://127.0.0.1:8000/api/v1/country/3/",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"api",
								"v1",
								"country",
								"3",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	]
}